/*
 * generated by Xtext 2.12.0
 */
package org.xtext.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class RipDSLGrammarAccess extends AbstractGrammarElementFinder {
	
	public class APIRestElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.RipDSL.APIRest");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAPIRestAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHostKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cHostAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cHostEStringParserRuleCall_3_0 = (RuleCall)cHostAssignment_3.eContents().get(0);
		private final Keyword cPortKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cPortAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cPortEIntParserRuleCall_6_0 = (RuleCall)cPortAssignment_6.eContents().get(0);
		private final Keyword cCommandsKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cColonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cCommandsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cCommandsCommandRestParserRuleCall_9_0 = (RuleCall)cCommandsAssignment_9.eContents().get(0);
		
		//APIRest:
		//	{APIRest}
		//	'host' ':' host=EString
		//	'port' ':' port=EInt
		//	'commands' ':'
		//	commands+=CommandRest+;
		@Override public ParserRule getRule() { return rule; }
		
		//{APIRest} 'host' ':' host=EString 'port' ':' port=EInt 'commands' ':' commands+=CommandRest+
		public Group getGroup() { return cGroup; }
		
		//{APIRest}
		public Action getAPIRestAction_0() { return cAPIRestAction_0; }
		
		//'host'
		public Keyword getHostKeyword_1() { return cHostKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//host=EString
		public Assignment getHostAssignment_3() { return cHostAssignment_3; }
		
		//EString
		public RuleCall getHostEStringParserRuleCall_3_0() { return cHostEStringParserRuleCall_3_0; }
		
		//'port'
		public Keyword getPortKeyword_4() { return cPortKeyword_4; }
		
		//':'
		public Keyword getColonKeyword_5() { return cColonKeyword_5; }
		
		//port=EInt
		public Assignment getPortAssignment_6() { return cPortAssignment_6; }
		
		//EInt
		public RuleCall getPortEIntParserRuleCall_6_0() { return cPortEIntParserRuleCall_6_0; }
		
		//'commands'
		public Keyword getCommandsKeyword_7() { return cCommandsKeyword_7; }
		
		//':'
		public Keyword getColonKeyword_8() { return cColonKeyword_8; }
		
		//commands+=CommandRest+
		public Assignment getCommandsAssignment_9() { return cCommandsAssignment_9; }
		
		//CommandRest
		public RuleCall getCommandsCommandRestParserRuleCall_9_0() { return cCommandsCommandRestParserRuleCall_9_0; }
	}
	public class CommandRestElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.RipDSL.CommandRest");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cMethodKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMethodAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMethodMethodEnumRuleCall_4_0 = (RuleCall)cMethodAssignment_4.eContents().get(0);
		private final Keyword cPathKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cPathAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cPathEStringParserRuleCall_7_0 = (RuleCall)cPathAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cEntryFormatsKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cColonKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_8_2 = (Keyword)cGroup_8.eContents().get(2);
		private final Assignment cEntryFormatsAssignment_8_3 = (Assignment)cGroup_8.eContents().get(3);
		private final RuleCall cEntryFormatsEStringParserRuleCall_8_3_0 = (RuleCall)cEntryFormatsAssignment_8_3.eContents().get(0);
		private final Group cGroup_8_4 = (Group)cGroup_8.eContents().get(4);
		private final Keyword cHyphenMinusKeyword_8_4_0 = (Keyword)cGroup_8_4.eContents().get(0);
		private final Assignment cEntryFormatsAssignment_8_4_1 = (Assignment)cGroup_8_4.eContents().get(1);
		private final RuleCall cEntryFormatsEStringParserRuleCall_8_4_1_0 = (RuleCall)cEntryFormatsAssignment_8_4_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cOutputFormatsKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cColonKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_9_2 = (Keyword)cGroup_9.eContents().get(2);
		private final Assignment cOutputFormatsAssignment_9_3 = (Assignment)cGroup_9.eContents().get(3);
		private final RuleCall cOutputFormatsEStringParserRuleCall_9_3_0 = (RuleCall)cOutputFormatsAssignment_9_3.eContents().get(0);
		private final Group cGroup_9_4 = (Group)cGroup_9.eContents().get(4);
		private final Keyword cHyphenMinusKeyword_9_4_0 = (Keyword)cGroup_9_4.eContents().get(0);
		private final Assignment cOutputFormatsAssignment_9_4_1 = (Assignment)cGroup_9_4.eContents().get(1);
		private final RuleCall cOutputFormatsEStringParserRuleCall_9_4_1_0 = (RuleCall)cOutputFormatsAssignment_9_4_1.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cDescriptionKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cColonKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cDescriptionAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cDescriptionEStringParserRuleCall_10_2_0 = (RuleCall)cDescriptionAssignment_10_2.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cParametersKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cColonKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_11_2 = (Keyword)cGroup_11.eContents().get(2);
		private final Assignment cParametersAssignment_11_3 = (Assignment)cGroup_11.eContents().get(3);
		private final RuleCall cParametersParameterParserRuleCall_11_3_0 = (RuleCall)cParametersAssignment_11_3.eContents().get(0);
		private final Group cGroup_11_4 = (Group)cGroup_11.eContents().get(4);
		private final Keyword cHyphenMinusKeyword_11_4_0 = (Keyword)cGroup_11_4.eContents().get(0);
		private final Assignment cParametersAssignment_11_4_1 = (Assignment)cGroup_11_4.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_11_4_1_0 = (RuleCall)cParametersAssignment_11_4_1.eContents().get(0);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cResponseKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Keyword cColonKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_12_2 = (Keyword)cGroup_12.eContents().get(2);
		private final Assignment cResponseAssignment_12_3 = (Assignment)cGroup_12.eContents().get(3);
		private final RuleCall cResponseResponseParserRuleCall_12_3_0 = (RuleCall)cResponseAssignment_12_3.eContents().get(0);
		private final Group cGroup_12_4 = (Group)cGroup_12.eContents().get(4);
		private final Keyword cHyphenMinusKeyword_12_4_0 = (Keyword)cGroup_12_4.eContents().get(0);
		private final Assignment cResponseAssignment_12_4_1 = (Assignment)cGroup_12_4.eContents().get(1);
		private final RuleCall cResponseResponseParserRuleCall_12_4_1_0 = (RuleCall)cResponseAssignment_12_4_1.eContents().get(0);
		
		//CommandRest:
		//	name=EString ':'
		//	'method' ':' method=Method
		//	'path' ':' path=EString ('entryFormats' ':'
		//	'-' entryFormats+=EString ("-" entryFormats+=EString)*)? ('outputFormats' ':'
		//	'-' outputFormats+=EString ("-" outputFormats+=EString)*)? ('description' ':' description=EString)? ('parameters' ':'
		//	'-' parameters+=Parameter ("-" parameters+=Parameter)*)? ('response' ':'
		//	'-' response+=Response ("-" response+=Response)*)?;
		@Override public ParserRule getRule() { return rule; }
		
		//name=EString ':' 'method' ':' method=Method 'path' ':' path=EString ('entryFormats' ':' '-' entryFormats+=EString ("-"
		//entryFormats+=EString)*)? ('outputFormats' ':' '-' outputFormats+=EString ("-" outputFormats+=EString)*)?
		//('description' ':' description=EString)? ('parameters' ':' '-' parameters+=Parameter ("-" parameters+=Parameter)*)?
		//('response' ':' '-' response+=Response ("-" response+=Response)*)?
		public Group getGroup() { return cGroup; }
		
		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//'method'
		public Keyword getMethodKeyword_2() { return cMethodKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//method=Method
		public Assignment getMethodAssignment_4() { return cMethodAssignment_4; }
		
		//Method
		public RuleCall getMethodMethodEnumRuleCall_4_0() { return cMethodMethodEnumRuleCall_4_0; }
		
		//'path'
		public Keyword getPathKeyword_5() { return cPathKeyword_5; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//path=EString
		public Assignment getPathAssignment_7() { return cPathAssignment_7; }
		
		//EString
		public RuleCall getPathEStringParserRuleCall_7_0() { return cPathEStringParserRuleCall_7_0; }
		
		//('entryFormats' ':' '-' entryFormats+=EString ("-" entryFormats+=EString)*)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'entryFormats'
		public Keyword getEntryFormatsKeyword_8_0() { return cEntryFormatsKeyword_8_0; }
		
		//':'
		public Keyword getColonKeyword_8_1() { return cColonKeyword_8_1; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_8_2() { return cHyphenMinusKeyword_8_2; }
		
		//entryFormats+=EString
		public Assignment getEntryFormatsAssignment_8_3() { return cEntryFormatsAssignment_8_3; }
		
		//EString
		public RuleCall getEntryFormatsEStringParserRuleCall_8_3_0() { return cEntryFormatsEStringParserRuleCall_8_3_0; }
		
		//("-" entryFormats+=EString)*
		public Group getGroup_8_4() { return cGroup_8_4; }
		
		//"-"
		public Keyword getHyphenMinusKeyword_8_4_0() { return cHyphenMinusKeyword_8_4_0; }
		
		//entryFormats+=EString
		public Assignment getEntryFormatsAssignment_8_4_1() { return cEntryFormatsAssignment_8_4_1; }
		
		//EString
		public RuleCall getEntryFormatsEStringParserRuleCall_8_4_1_0() { return cEntryFormatsEStringParserRuleCall_8_4_1_0; }
		
		//('outputFormats' ':' '-' outputFormats+=EString ("-" outputFormats+=EString)*)?
		public Group getGroup_9() { return cGroup_9; }
		
		//'outputFormats'
		public Keyword getOutputFormatsKeyword_9_0() { return cOutputFormatsKeyword_9_0; }
		
		//':'
		public Keyword getColonKeyword_9_1() { return cColonKeyword_9_1; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_9_2() { return cHyphenMinusKeyword_9_2; }
		
		//outputFormats+=EString
		public Assignment getOutputFormatsAssignment_9_3() { return cOutputFormatsAssignment_9_3; }
		
		//EString
		public RuleCall getOutputFormatsEStringParserRuleCall_9_3_0() { return cOutputFormatsEStringParserRuleCall_9_3_0; }
		
		//("-" outputFormats+=EString)*
		public Group getGroup_9_4() { return cGroup_9_4; }
		
		//"-"
		public Keyword getHyphenMinusKeyword_9_4_0() { return cHyphenMinusKeyword_9_4_0; }
		
		//outputFormats+=EString
		public Assignment getOutputFormatsAssignment_9_4_1() { return cOutputFormatsAssignment_9_4_1; }
		
		//EString
		public RuleCall getOutputFormatsEStringParserRuleCall_9_4_1_0() { return cOutputFormatsEStringParserRuleCall_9_4_1_0; }
		
		//('description' ':' description=EString)?
		public Group getGroup_10() { return cGroup_10; }
		
		//'description'
		public Keyword getDescriptionKeyword_10_0() { return cDescriptionKeyword_10_0; }
		
		//':'
		public Keyword getColonKeyword_10_1() { return cColonKeyword_10_1; }
		
		//description=EString
		public Assignment getDescriptionAssignment_10_2() { return cDescriptionAssignment_10_2; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_10_2_0() { return cDescriptionEStringParserRuleCall_10_2_0; }
		
		//('parameters' ':' '-' parameters+=Parameter ("-" parameters+=Parameter)*)?
		public Group getGroup_11() { return cGroup_11; }
		
		//'parameters'
		public Keyword getParametersKeyword_11_0() { return cParametersKeyword_11_0; }
		
		//':'
		public Keyword getColonKeyword_11_1() { return cColonKeyword_11_1; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_11_2() { return cHyphenMinusKeyword_11_2; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_11_3() { return cParametersAssignment_11_3; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_11_3_0() { return cParametersParameterParserRuleCall_11_3_0; }
		
		//("-" parameters+=Parameter)*
		public Group getGroup_11_4() { return cGroup_11_4; }
		
		//"-"
		public Keyword getHyphenMinusKeyword_11_4_0() { return cHyphenMinusKeyword_11_4_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_11_4_1() { return cParametersAssignment_11_4_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_11_4_1_0() { return cParametersParameterParserRuleCall_11_4_1_0; }
		
		//('response' ':' '-' response+=Response ("-" response+=Response)*)?
		public Group getGroup_12() { return cGroup_12; }
		
		//'response'
		public Keyword getResponseKeyword_12_0() { return cResponseKeyword_12_0; }
		
		//':'
		public Keyword getColonKeyword_12_1() { return cColonKeyword_12_1; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_12_2() { return cHyphenMinusKeyword_12_2; }
		
		//response+=Response
		public Assignment getResponseAssignment_12_3() { return cResponseAssignment_12_3; }
		
		//Response
		public RuleCall getResponseResponseParserRuleCall_12_3_0() { return cResponseResponseParserRuleCall_12_3_0; }
		
		//("-" response+=Response)*
		public Group getGroup_12_4() { return cGroup_12_4; }
		
		//"-"
		public Keyword getHyphenMinusKeyword_12_4_0() { return cHyphenMinusKeyword_12_4_0; }
		
		//response+=Response
		public Assignment getResponseAssignment_12_4_1() { return cResponseAssignment_12_4_1; }
		
		//Response
		public RuleCall getResponseResponseParserRuleCall_12_4_1_0() { return cResponseResponseParserRuleCall_12_4_1_0; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.RipDSL.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.RipDSL.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt ecore::EInt:
		//	'-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.RipDSL.Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNameKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cTypeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTypeEStringParserRuleCall_5_0 = (RuleCall)cTypeAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cDescriptionKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cColonKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cCommentAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cCommentEStringParserRuleCall_6_2_0 = (RuleCall)cCommentAssignment_6_2.eContents().get(0);
		
		//Parameter:
		//	'name' ':' name=EString
		//	'type' ':' type=EString ('description' ':' comment=EString)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'name' ':' name=EString 'type' ':' type=EString ('description' ':' comment=EString)?
		public Group getGroup() { return cGroup; }
		
		//'name'
		public Keyword getNameKeyword_0() { return cNameKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'type'
		public Keyword getTypeKeyword_3() { return cTypeKeyword_3; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//type=EString
		public Assignment getTypeAssignment_5() { return cTypeAssignment_5; }
		
		//EString
		public RuleCall getTypeEStringParserRuleCall_5_0() { return cTypeEStringParserRuleCall_5_0; }
		
		//('description' ':' comment=EString)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'description'
		public Keyword getDescriptionKeyword_6_0() { return cDescriptionKeyword_6_0; }
		
		//':'
		public Keyword getColonKeyword_6_1() { return cColonKeyword_6_1; }
		
		//comment=EString
		public Assignment getCommentAssignment_6_2() { return cCommentAssignment_6_2; }
		
		//EString
		public RuleCall getCommentEStringParserRuleCall_6_2_0() { return cCommentEStringParserRuleCall_6_2_0; }
	}
	public class ResponseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.RipDSL.Response");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCodeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCodeEIntParserRuleCall_0_0 = (RuleCall)cCodeAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cDescriptionKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cColonKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cDescriptionAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cDescriptionEStringParserRuleCall_2_2_0 = (RuleCall)cDescriptionAssignment_2_2.eContents().get(0);
		
		//Response:
		//	code=EInt ':' ('description' ':' description=EString)?;
		@Override public ParserRule getRule() { return rule; }
		
		//code=EInt ':' ('description' ':' description=EString)?
		public Group getGroup() { return cGroup; }
		
		//code=EInt
		public Assignment getCodeAssignment_0() { return cCodeAssignment_0; }
		
		//EInt
		public RuleCall getCodeEIntParserRuleCall_0_0() { return cCodeEIntParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//('description' ':' description=EString)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'description'
		public Keyword getDescriptionKeyword_2_0() { return cDescriptionKeyword_2_0; }
		
		//':'
		public Keyword getColonKeyword_2_1() { return cColonKeyword_2_1; }
		
		//description=EString
		public Assignment getDescriptionAssignment_2_2() { return cDescriptionAssignment_2_2; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_2_2_0() { return cDescriptionEStringParserRuleCall_2_2_0; }
	}
	
	public class MethodElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.RipDSL.Method");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPUTEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPUTPUTKeyword_0_0 = (Keyword)cPUTEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPOSTEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPOSTPOSTKeyword_1_0 = (Keyword)cPOSTEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cDELETEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cDELETEDELETEKeyword_2_0 = (Keyword)cDELETEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cGETEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cGETGETKeyword_3_0 = (Keyword)cGETEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cPATCHEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cPATCHPATCHKeyword_4_0 = (Keyword)cPATCHEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum Method:
		//	PUT | POST | DELETE | GET | PATCH;
		public EnumRule getRule() { return rule; }
		
		//PUT | POST | DELETE | GET | PATCH
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PUT
		public EnumLiteralDeclaration getPUTEnumLiteralDeclaration_0() { return cPUTEnumLiteralDeclaration_0; }
		
		//'PUT'
		public Keyword getPUTPUTKeyword_0_0() { return cPUTPUTKeyword_0_0; }
		
		//POST
		public EnumLiteralDeclaration getPOSTEnumLiteralDeclaration_1() { return cPOSTEnumLiteralDeclaration_1; }
		
		//'POST'
		public Keyword getPOSTPOSTKeyword_1_0() { return cPOSTPOSTKeyword_1_0; }
		
		//DELETE
		public EnumLiteralDeclaration getDELETEEnumLiteralDeclaration_2() { return cDELETEEnumLiteralDeclaration_2; }
		
		//'DELETE'
		public Keyword getDELETEDELETEKeyword_2_0() { return cDELETEDELETEKeyword_2_0; }
		
		//GET
		public EnumLiteralDeclaration getGETEnumLiteralDeclaration_3() { return cGETEnumLiteralDeclaration_3; }
		
		//'GET'
		public Keyword getGETGETKeyword_3_0() { return cGETGETKeyword_3_0; }
		
		//PATCH
		public EnumLiteralDeclaration getPATCHEnumLiteralDeclaration_4() { return cPATCHEnumLiteralDeclaration_4; }
		
		//'PATCH'
		public Keyword getPATCHPATCHKeyword_4_0() { return cPATCHPATCHKeyword_4_0; }
	}
	
	private final APIRestElements pAPIRest;
	private final CommandRestElements pCommandRest;
	private final EStringElements pEString;
	private final EIntElements pEInt;
	private final MethodElements eMethod;
	private final ParameterElements pParameter;
	private final ResponseElements pResponse;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public RipDSLGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pAPIRest = new APIRestElements();
		this.pCommandRest = new CommandRestElements();
		this.pEString = new EStringElements();
		this.pEInt = new EIntElements();
		this.eMethod = new MethodElements();
		this.pParameter = new ParameterElements();
		this.pResponse = new ResponseElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.RipDSL".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//APIRest:
	//	{APIRest}
	//	'host' ':' host=EString
	//	'port' ':' port=EInt
	//	'commands' ':'
	//	commands+=CommandRest+;
	public APIRestElements getAPIRestAccess() {
		return pAPIRest;
	}
	
	public ParserRule getAPIRestRule() {
		return getAPIRestAccess().getRule();
	}
	
	//CommandRest:
	//	name=EString ':'
	//	'method' ':' method=Method
	//	'path' ':' path=EString ('entryFormats' ':'
	//	'-' entryFormats+=EString ("-" entryFormats+=EString)*)? ('outputFormats' ':'
	//	'-' outputFormats+=EString ("-" outputFormats+=EString)*)? ('description' ':' description=EString)? ('parameters' ':'
	//	'-' parameters+=Parameter ("-" parameters+=Parameter)*)? ('response' ':'
	//	'-' response+=Response ("-" response+=Response)*)?;
	public CommandRestElements getCommandRestAccess() {
		return pCommandRest;
	}
	
	public ParserRule getCommandRestRule() {
		return getCommandRestAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//EInt ecore::EInt:
	//	'-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//enum Method:
	//	PUT | POST | DELETE | GET | PATCH;
	public MethodElements getMethodAccess() {
		return eMethod;
	}
	
	public EnumRule getMethodRule() {
		return getMethodAccess().getRule();
	}
	
	//Parameter:
	//	'name' ':' name=EString
	//	'type' ':' type=EString ('description' ':' comment=EString)?;
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}
	
	//Response:
	//	code=EInt ':' ('description' ':' description=EString)?;
	public ResponseElements getResponseAccess() {
		return pResponse;
	}
	
	public ParserRule getResponseRule() {
		return getResponseAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
